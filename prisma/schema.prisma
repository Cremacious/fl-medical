datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(uuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  stashItems    StashItem[]
  history       Purchase[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}
 
model Purchase {
  id       String   @id @default(uuid())
  userId    String
  date     DateTime @default(now())
  dispensary String
  total    Float
  quantity Int
  purchaseItems PurchaseItem[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PurchaseItem {
  id         String   @id @default(uuid())
  purchaseId String
  name      String
  category String
  type     String
  size     String
  quantity Int
  price    Float
  thc     Float
  cbd     Float
  lineage String
  details String

  purchase Purchase @relation(fields: [purchaseId], references: [id], onDelete: Cascade)
}

model StashItem {
  id         String   @id @default(uuid())
  userId     String
  name       String
  category   String
  type       String
  size       String
  thc        String
  cbd        String
  lineage    String
  thoughts    String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

